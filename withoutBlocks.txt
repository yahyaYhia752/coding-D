-- // GUI TO LUA \\ --

-- // INSTANCES: 16 | SCRIPTS: 2 | MODULES: 1 \\ --

local UI = {}

-- // StarterGui.AutoGui \\ --
UI["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
UI["1"]["Name"] = [[AutoGui]]
UI["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling

-- // StarterGui.AutoGui.posM \\ --
UI["2"] = Instance.new("Frame", UI["1"])
UI["2"]["BorderSizePixel"] = 0
UI["2"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46)
UI["2"]["AnchorPoint"] = Vector2.new(0.5, 0.5)
UI["2"]["Size"] = UDim2.new(0, 7, 0, 7)
UI["2"]["Position"] = UDim2.new(0.5, 0, 0.5, 0)
UI["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2"]["Name"] = [[posM]]

-- // StarterGui.AutoGui.posM.UIStroke \\ --
UI["3"] = Instance.new("UIStroke", UI["2"])
UI["3"]["Thickness"] = 1.5

-- // StarterGui.AutoGui.LocalScript \\ --
UI["4"] = Instance.new("LocalScript", UI["1"])


-- // StarterGui.AutoGui.auto \\ --
UI["5"] = Instance.new("Frame", UI["1"])
UI["5"]["BorderSizePixel"] = 0
UI["5"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46)
UI["5"]["AnchorPoint"] = Vector2.new(0.5, 0.5)
UI["5"]["Size"] = UDim2.new(0.1, 0, 0.1, 0)
UI["5"]["Position"] = UDim2.new(0, 40, 0.1, 0)
UI["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["5"]["Name"] = [[auto]]

-- // StarterGui.AutoGui.auto.F \\ --
UI["6"] = Instance.new("TextButton", UI["5"])
UI["6"]["BorderSizePixel"] = 0
UI["6"]["TextSize"] = 14
UI["6"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["6"]["Size"] = UDim2.new(1, 0, 1, 0)
UI["6"]["BackgroundTransparency"] = 1
UI["6"]["Name"] = [[F]]
UI["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6"]["Text"] = "اوتو :]"

-- // StarterGui.AutoGui.auto.UIAspectRatioConstraint \\ --
UI["7"] = Instance.new("UIAspectRatioConstraint", UI["5"])
UI["7"]["AspectRatio"] = 1.64673

-- // StarterGui.AutoGui.auto.Start \\ --
UI["8"] = Instance.new("BoolValue", UI["5"])
UI["8"]["Name"] = [[Start]]

-- // StarterGui.AutoGui.auto.UICorner \\ --
UI["9"] = Instance.new("UICorner", UI["5"])


-- // StarterGui.AutoGui.auto.UIStroke \\ --
UI["a"] = Instance.new("UIStroke", UI["5"])
UI["a"]["Thickness"] = 1.5
UI["a"]["Color"] = Color3.fromRGB(86, 171, 128)

-- // StarterGui.AutoGui.ModuleScript \\ --
UI["b"] = Instance.new("ModuleScript", UI["1"])


-- // StarterGui.AutoGui.data \\ --
UI["c"] = Instance.new("Folder", UI["1"])
UI["c"]["Name"] = [[data]]

-- // StarterGui.AutoGui.data.Position3d \\ --
UI["d"] = Instance.new("Vector3Value", UI["c"])
UI["d"]["Name"] = [[Position3d]]

-- // StarterGui.AutoGui.data.Target \\ --
UI["e"] = Instance.new("ObjectValue", UI["c"])
UI["e"]["Name"] = [[Target]]

-- // StarterGui.AutoGui.data.setData \\ --
UI["f"] = Instance.new("LocalScript", UI["c"])
UI["f"]["Name"] = [[setData]]

-- // StarterGui.AutoGui.data.TargetSurface \\ --
UI["10"] = Instance.new("Texture", UI["c"])
UI["10"]["Face"] = Enum.NormalId.Front
UI["10"]["Name"] = [[TargetSurface]]

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
	local ModuleState = G2L_MODULES[Module];
	if ModuleState then
		if not ModuleState.Required then
			ModuleState.Required = true;
			ModuleState.Value = ModuleState.Closure();
		end
		return ModuleState.Value;
	end;
	return G2L_REQUIRE(Module);
end

G2L_MODULES[UI["b"]] = {
	Closure = function()
		local script = UI["b"]
		local z = {}
		local plr = game.Players.LocalPlayer
		local Cam = workspace.CurrentCamera
		m = plr:GetMouse()
		function z:getMouseTargetScale(frame)
			local x,y = m.ViewSizeX * frame.Position.X.Scale,m.ViewSizeY * frame.Position.Y.Scale 
			local mousePos = Vector2.new(x, y)
			local unitRay = Cam:ScreenPointToRay(mousePos.X, mousePos.Y)
			local ray = Ray.new(unitRay.Origin, unitRay.Direction * 1000)
			local part, position = workspace:FindPartOnRay(ray, plr.Character)

			return {part, position}
		end
		function z:getMouseTargetOffset(frame:Frame)
			local x,y = frame.Position.X.Offset,frame.Position.Y.Offset
			local mousePos = Vector2.new(x, y)
			local unitRay = Cam:ScreenPointToRay(mousePos.X, mousePos.Y)
			local ray = Ray.new(unitRay.Origin, unitRay.Direction * 1000)
			local part, position = workspace:FindPartOnRay(ray, plr.Character)

			return {part, position}
		end
		function z:getTargetSurface(part, position)
			if part == nil then
				return nil
			end
			local partSize = part.Size
			local partPosition = part.Position

			local difference = position - partPosition

			local absDifference = Vector3.new(math.abs(difference.X), math.abs(difference.Y), math.abs(difference.Z))

			if absDifference.X > absDifference.Y and absDifference.X > absDifference.Z then
				if difference.X > 0 then
					return Enum.NormalId.Right
				else
					return Enum.NormalId.Left
				end
			elseif absDifference.Y > absDifference.X and absDifference.Y > absDifference.Z then
				if difference.Y > 0 then
					return Enum.NormalId.Top
				else
					return Enum.NormalId.Bottom
				end
			else
				if difference.Z > 0 then
					return Enum.NormalId.Front
				else
					return Enum.NormalId.Back
				end
			end
		end

		function z:Click()
			local range = 99e9
			local player = game.Players.LocalPlayer
			local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
			if tool == nil or tool.Name == "Block" then return end
			local FolderD = script.Parent:WaitForChild("data")
			local p = game.Players:GetPlayers()
			if tool.Name == "Sword" then
				tool:Activate()
			elseif tool.Name == "Bow" then
				game:GetService("Players").LocalPlayer.Character.Bow.ServerControl:InvokeServer(true)
				wait()
				game:GetService("Players").LocalPlayer.Character.Bow.ServerControl:InvokeServer(false)
			elseif tool.Name == "Axe" then
				if FolderD:FindFirstChild("Target").Value == nil then return nil end
				if game.Players.LocalPlayer.PlayerGui:WaitForChild("B").Adornee == nil then
					return 
				end
				local args = {
					[1] = game.Players.LocalPlayer.PlayerGui:WaitForChild("B").Adornee
				}
				game:GetService("Players").LocalPlayer.Character.Axe.RemoteEvent:FireServer(unpack(args))
			end
		end
		return z

	end
}
-- // StarterGui.AutoGui.LocalScript \\ --
local function SCRIPT_4()
	local script = UI["4"]
	local p = game.Players.LocalPlayer
	m = p:GetMouse()
	local screen = script.Parent
	local posM = screen.posM
	local auto= screen.auto
	local Module = require(script.Parent:WaitForChild("ModuleScript"))
	local D = {
		ColorOn = Color3.fromRGB(85, 170, 127);
		ColorOff = Color3.fromRGB(170, 87, 88);
	}
	-- pos mouse
	task.spawn(function()
		game["Run Service"].RenderStepped:Connect(function()
			posM.Position = UDim2.new(0,m.X,0,m.Y)
		end)
	end)
	-- if mouse click
	task.spawn(function()
		auto.F.MouseButton1Down:Connect(function()
			auto.Start.Value = not auto.Start.Value
		end)
	end)
	-- script autoClicker

	task.spawn(function()

		local function updateColors(v)
			if v then
				game.TweenService:Create(auto.UIStroke,TweenInfo.new(.5),{Color = D.ColorOn}):Play()
				game.TweenService:Create(posM.UIStroke,TweenInfo.new(.5),{Color = D.ColorOn}):Play()
			else
				game.TweenService:Create(auto.UIStroke,TweenInfo.new(.5),{Color = D.ColorOff}):Play()
				game.TweenService:Create(posM.UIStroke,TweenInfo.new(.5),{Color = D.ColorOff}):Play()
			end
		end
		local v = false
		auto.Start.Value = v
		updateColors(v)
		wait()
		auto.Start.Changed:Connect(function()
			v = auto.Start.Value
			updateColors(v)
		end)
	end)

	-- loop
	task.spawn(function()
		while task.wait() do
			if auto.Start.Value == true then
				-- function click
				Module:Click()
			end
		end
	end)
end
task.spawn(SCRIPT_4)
-- // StarterGui.AutoGui.data.setData \\ --
local function SCRIPT_f()
	local script = UI["f"]
	local module = require(script.Parent.Parent:WaitForChild("ModuleScript"))
	game["Run Service"].RenderStepped:Connect(function()
		local f = UI["2"]
		if module:getMouseTargetScale(f) ~= nil and module:getMouseTargetScale(f)[1] then
			UI["e"].Value,UI["d"].Value = module:getMouseTargetScale(f)[1],module:getMouseTargetScale(f)[2]
		end
		local face = module:getTargetSurface(module:getMouseTargetScale(f)[1],module:getMouseTargetScale(f)[2])
		if face == nil then
			return nil
		end
		UI["10"].Face = face
	end)
end
task.spawn(SCRIPT_f)

return UI["1"], require;
